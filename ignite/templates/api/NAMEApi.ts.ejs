---
filename: <%= props.camelCaseName.replace(/api/gi,'') %>Api.ts
destinationDir: app/services/api
patch:
  path: "app/services/api/index.ts"
  append: "export * from \"./<%= props.camelCaseName.replace(/api/gi,'') %>Api\"\n"
  skip: <%= props.skipIndexFile %>
---
import { ApiResponse } from "apisauce"
import { UserSnapshotOut } from "~/models"
import { Api } from "./api"
import { getGeneralApiProblem } from "./apiProblem"
import { GetSomeResult } from "./api.types"

export class <%= props.pascalCaseName.replace(/api/gi,'') %>Api extends Api {
  // just a example or dummy function, delete it later.
  async getSomeFunction(): Promise<GetSomeResult> {
    const { apisauce, config } = this
    const response: ApiResponse<any> = await apisauce.get(config.listUsers)

    if (!response.ok) {
      const problem = getGeneralApiProblem(response)
      if (problem) return problem
    }

    try {
      const data: UserSnapshotOut[] = response.data
      return { kind: "ok", users: data }
    } catch (error) {
      return { kind: "bad-data" }
    }
  }
}

// Singleton instance of the API for convenience
export const api<%= props.pascalCaseName.replace(/api/gi,'') %> = new <%= props.pascalCaseName.replace(/api/gi,'') %>Api()
